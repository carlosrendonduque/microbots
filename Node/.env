#Type of environment : testing or production
MICROBOT_ENVIRONMENT=production
#RabbitMQ queue to process microbot transactions
ORCHESTRATOR_QUEUE_NAME=orchestrator_queue_name
#RabbitMQ to publish the output of the automation. The value must match with the queue name defined in RabbitMQ
QUEUE_RABBIT_PUBLISHER=queue_test_microbot 
#RabbitMQ to consumer the intput of the automation. The value must match with the queue name defined in RabbitMQ
QUEUE_RABBIT_CONSUMER=queue_test_microbot 
#Logginf field which allows grouping of log data of two or more subprocesses under the same business process name
LOGF_BUSINESS_PROCESS_NAME=framework 
#Must be 0 if working with Microbots Orchestrator, the robot will retry the same transaction which failed with a system exception. Must be an integer value
MAX_RETRY_NUMBER=0 
#Exception calling get_transaction_data
LOGMESSAGE_GET_TRANSACTION_DATA=Exception calling transaction number:  
#Exception retrieving get_transaction_data
LOGMESSAGE_GET_TRANSACTION_DATA_ERROR=Error getting transaction number: 
#Processed transaction succesfull
LOGMESSAGE_SUCCESS=Transaction Successful 
#Processed transaction failed with business exception
LOGMESSAGE_BUSINESS_RULE_EXCEPTION=Business Rule Exception
#Processed transaction failed with applcation exception
LOGMESSAGE_APPLICATION_EXCEPTION=System Exception
#RabbitMQ string connection 
RABBIT_CONNECTION=amqp://localhost 
#Api to get external settings
EXTERNAL_SETTINGS_API=http:// 

